# -*- mode: sls -*-
#######################################################################
# This file is managed by SaltStack. Local changes will be overwritten.
# formula: salt.master
# path: salt://salt/files/etc/salt/master.d/fileserver.conf
#######################################################################
{%- from 'salt/map.jinja' import master with context %}

gitfs_provider: gitpython

fileserver_backend:
  - roots
{%- if master.fileserver_backend is defined %}
{%- for backend in master.fileserver_backend %}
  - {{ backend }}
{%- endfor %}
{% endif %}

{%- if master.environment == 'devmode' %}
# If we are in a devmode environment include the
# formula that we are currently developing
# During development this formula does not need to
# Be a git repository
file_roots:
  devmode:
{%- for formula in master.formulas.file_roots %}
    - /srv/formulas/nocbot-formula-{{ formula }}
{%- endfor %}
{% endif %}

{%- if salt['pillar.get']('master:fileserver_backend:gitfs') is defined %}
# gitfs_privkey: /etc/salt/gitfs/id_rsa
# gitfs_pubkey: /etc/salt/gitfs/id_rsa.pub

gitfs_ref_types:
  - tag
  - branch

# The branch "salt" does not exist. If it does,
# whatever is there will be applied to *all* environments
# That is not the behavior we desire
{%- if master.gitfs_base is defined %}
gitfs_base: {{ master.get('gitfs_base', 'salt') }}
{%- endif %}

gitfs_remotes:
{%- if master.environment == 'devmode' %}
{%- for formula in master.formulas.devmode %}
# We want to use existing production formulas for
# devmode if there are any
  # {{ formula }}
  - file:///srv/formulas/nocbot-formula-{{ formula }}:
    - root: {{ formula }}
    - mountpoint: salt://{{ formula }}
    - saltenv:
      - devmode:
        - ref: master
{%- endfor %}
{%- else %}

{%- for formula in master.formulas[master.environment] %}
  # {{ formula }}
  - ssh://git@github.com:nocbot-project/nocbot-formula-{{ formula }}:
    - root: {{ formula }}
    - mountpoint: salt://{{ formula }}
    - saltenv:
        - {{ master.environment }}
        {%- if master.environment == 'production' %}
          - ref: master
        {%- else %}
          - ref: {{ master.environment }}
        {%- endif %}
{%- endfor %}

{%- endif %}
{%- endif %}
